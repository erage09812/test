# Stage 1: Build the application
FROM golang:1.22-alpine AS builder

WORKDIR /app

# Define build arguments
ARG SF_USERNAME
ARG SF_PASSWORD
ARG SF_CLIENT_ID
ARG SF_CLIENT_SECRET
ARG SF_LOGIN_ENDPOINT
ARG SF_INSTANCE_URL

# Set environment variables using build arguments
ENV SF_USERNAME=$SF_USERNAME
ENV SF_PASSWORD=$SF_PASSWORD
ENV SF_CLIENT_ID=$SF_CLIENT_ID
ENV SF_CLIENT_SECRET=$SF_CLIENT_SECRET
ENV SF_LOGIN_ENDPOINT=$SF_LOGIN_ENDPOINT
ENV SF_INSTANCE_URL=$SF_INSTANCE_URL

# Copy and download dependencies
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the application source code
COPY . .

# Build the Go application
RUN CGO_ENABLED=0 GOOS=linux go build -o app ./cmd/main.go

# Stage 2: Create a minimal runtime image
FROM gcr.io/distroless/static

WORKDIR /app

# Copy the built binary from the previous stage
COPY --from=builder /app/app .

# Set environment variables from build arguments
ENV SF_USERNAME=$SF_USERNAME
ENV SF_PASSWORD=$SF_PASSWORD
ENV SF_CLIENT_ID=$SF_CLIENT_ID
ENV SF_CLIENT_SECRET=$SF_CLIENT_SECRET
ENV SF_LOGIN_ENDPOINT=$SF_LOGIN_ENDPOINT
ENV SF_INSTANCE_URL=$SF_INSTANCE_URL

# Set the user to run the application
USER 1000:1000

# Expose port if necessary
EXPOSE 8080

# Specify the command to run the application
CMD ["./app"]
